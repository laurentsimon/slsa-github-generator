name: pre-submit actions

on:
  pull_request:
    branches: [main]
  merge_group:
  workflow_dispatch:

permissions: read-all

jobs:
  checkout:
    name: verify no checkout in Actions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - run: ./.github/workflows/scripts/pre-submit.actions/checkout.sh

  check-dist-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        action:
          - .github/actions/compute-sha256
          - .github/actions/privacy-check
          - .github/actions/generate-attestations
          - .github/actions/sign-attestations
          - .github/actions/create-docker_based-predicate
          - ./actions/delegator/setup-token
          - .github/actions/verify-token
          - .github/actions/detect-workflow-js
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0

      - name: Set Node.js 16
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version: 16

      - name: Rebuild the dist/ directory
        working-directory: ${{ matrix.action }}
        run: make clean package

      - name: Compare the expected and actual dist/ directories
        working-directory: ${{ matrix.action }}
        id: diff
        run: |
          set -euo pipefail
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
            echo "Detected uncommitted changes after build.  See status below:"
            git diff
            exit 1
          fi

      # If index.js was different from expected, upload the expected version as an artifact
      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}
        with:
          name: dist
          path: ${{ matrix.action }}/dist/

  # NOTE: needed for protected branch checks.
  check-dist:
    runs-on: ubuntu-latest
    needs: [checkout, check-dist-matrix]
    if: ${{ always() }}
    env:
      CHECKOUT_RESULT: ${{ needs.checkout.result }}
      CHECK_DIST_RESULT: ${{ needs.check-dist-matrix.result }}
    steps:
      - run: |
          set -euo pipefail
          # exit 0 if checks were successful.
          [ "${CHECK_DIST_RESULT}" == "success" ] && [ "${CHECKOUT_RESULT}" == "success" ]

  compute-sha256:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - run: |
          echo "foo" > artifact
      - id: compute-sha256
        uses: ./.github/actions/compute-sha256
        with:
          path: artifact
      - env:
          OUTPUT: ${{steps.compute-sha256.outputs.sha256}}
        run: |
          [[ "$OUTPUT" == "b5bb9d8014a0f9b1d61e21e796d78dccdf1352f23cd32812f4850b878ae4944c" ]]

  rng:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - run: |
          echo "foo" > artifact
      - id: rng
        uses: ./.github/actions/rng
      - env:
          OUTPUT: ${{steps.rng.outputs.random}}
        run: |
          echo "Got output: $OUTPUT"
          [[ "$OUTPUT" != "" ]]

  references:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __THIS_REPO__
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          repository: slsa-framework/example-package
          ref: main
          path: __EXAMPLE_PACKAGE__
      - name: Verify main references
        if: ${{ !contains(github.event.pull_request.body, '#label:release') }}
        run: ./__THIS_REPO__/.github/workflows/scripts/pre-submit.actions/references.sh
      - name: Verify version references
        if: ${{ contains(github.event.pull_request.body, '#label:release') }}
        env:
          BODY: "${{ github.event.pull_request.body }}"
        run: |
          # match the first instance of a line with 'label:release vX.Y.Z' with only leading or trailing whitespace.
          set -euo pipefail
          # NOTE: grep is not matching if there is a trailing '$' in the pattern for some reason...
          RELEASE_TAG=$(echo "$BODY" | grep -oe '^[[:blank:]]*#label:release[[:blank:]]*v[0-9]\+\.[0-9]\+\.[0-9]\+\(-rc\.[0-9]\+\)\?[[:blank:]]*' | head -n1 | sed -n 's/^[[:blank:]]*#label:release[[:blank:]]*\([^[:blank:]]*\)[[:blank:]]*/\1/p')
          RELEASE_TAG=${RELEASE_TAG} ./__THIS_REPO__/.github/workflows/scripts/pre-release/references.sh

  secure-project-checkout-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Checkout the Go repository
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-project-checkout-go
        with:
          path: __PROJECT_CHECKOUT_DIR__
          go-version: 1.18

  secure-project-checkout-node:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Checkout the Go repository
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-project-checkout-node
        with:
          path: __PROJECT_CHECKOUT_DIR__
          go-version: 16

  secure-upload-folder:
    runs-on: ubuntu-latest
    env:
      ARTIFACT_NAME: "my-artifact"
      UPLOAD_FOLDER_NAME: "upload-folder"
      DOWNLOAD_FOLDER_NAME: "download-folder"
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - name: Create folder
        run: |
          set -euo pipefail
          
          mkdir -p "${UPLOAD_FOLDER_NAME}/inside"
          mkdir -p "${UPLOAD_FOLDER_NAME}/empty"
          
          echo file1 > "${UPLOAD_FOLDER_NAME}/file1"
          echo file2 > "${UPLOAD_FOLDER_NAME}/file2"
          echo file3 > "${UPLOAD_FOLDER_NAME}/inside/file3"
          echo file4 > "${UPLOAD_FOLDER_NAME}/inside/file4"
          
          tree "${UPLOAD_FOLDER_NAME}"

      - name: Upload
        id: upload
        uses: ./.github/actions/secure-upload-folder@main
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "${{ env.UPLOAD_FOLDER_NAME }}"

      - name: Download
        id: download
        uses: ./.github/actions/secure-download-folder@main
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "${{ env.DOWNLOAD_FOLDER_NAME }}"
          sha256: ${{ steps.upload.outputs.sha256 }}

      - name: Validate contents
        run: |
          set -euo pipefail
          
          tree "${DOWNLOAD_FOLDER_NAME}"

          cd "${UPLOAD_FOLDER_NAME}"
          upload_tree=$(tree .)
          
          cd "../${DOWNLOAD_FOLDER_NAME}/${UPLOAD_FOLDER_NAME}"
          download_tree=$(tree .)
          
          if [[ "${upload_tree}" != "${download_tree}" ]]; then
            echo "Folder trees differ: ${upload_tree} != ${download_tree}"
            echo "Upload tree: ${upload_tree}"
            echo "Download tree: ${download_tree}"
            exit 1
          fi

      - name: Download
        id: download-error
        continue-on-error: true
        uses: ./.github/actions/secure-download-folder@main
        with:
          name: "${{ env.ARTIFACT_NAME }}"
          path: "${{ env.DOWNLOAD_FOLDER_NAME }}"
          sha256: 977b0c871b048d6578f5d5b40a5b6030a22fc130831a2d7b45b6868da7b51431

      - name: fail check
        env:
          OUTCOME: ${{ steps.download-error.outcome }}
        run: |
          set -euo pipefail
          [ "${OUTCOME}" == "failure" ]

  secure-download-artifact:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Create artifact
        run: |
          echo artifact > artifact1

      - name: Upload generated binary
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-upload-artifact
        with:
          name: artifact1
          path: artifact1

      - name: Create artifact
        run: rm artifact1

      - name: Download artifact
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-download-artifact
        with:
          name: artifact1
          path: artifact1
          sha256: 5b3513f580c8397212ff2c8f459c199efc0c90e4354a5f3533adf0a3fff3a530

  secure-download-artifact-builder-name:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Create artifact
        run: |
          echo artifact > artifact2

      - name: Upload generated binary
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-upload-artifact
        with:
          name: artifact2
          path: artifact2

      - name: Download artifact
        id: download-artifact
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-download-artifact
        continue-on-error: true
        with:
          name: artifact2
          path: path/to/__BUILDER_CHECKOUT_DIR__/artifact2
          sha256: 5b3513f580c8397212ff2c8f459c199efc0c90e4354a5f3533adf0a3fff3a530

      - name: fail check
        env:
          OUTCOME: ${{ steps.download-artifact.outcome }}
        run: |
          set -euo pipefail
          [ "${OUTCOME}" == "failure" ]

  secure-download-artifact-builder-repo-folder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Create artifact and folder
        run: |
          mkdir some-folder
          echo artifact > artifact3

      - name: Upload generated binary
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-upload-artifact
        with:
          name: artifact3
          path: artifact3

      - name: Download artifact
        id: download-artifact
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-download-artifact
        continue-on-error: true
        with:
          name: artifact3
          path: some-folder
          sha256: 5b3513f580c8397212ff2c8f459c199efc0c90e4354a5f3533adf0a3fff3a530

      - name: fail check
        env:
          OUTCOME: ${{ steps.download-artifact.outcome }}
        run: |
          set -euo pipefail
          [ "${OUTCOME}" == "failure" ]

  secure-download-artifact-builder-repo-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
        with:
          path: __BUILDER_CHECKOUT_DIR__

      - name: Create artifact
        run: |
          echo artifact > artifact4

      - name: Upload generated binary
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-upload-artifact
        with:
          name: artifact4
          path: artifact4

      - name: Download artifact
        id: download-artifact
        uses: ./__BUILDER_CHECKOUT_DIR__/.github/actions/secure-download-artifact
        continue-on-error: true
        with:
          name: artifact4
          path: artifact4
          sha256: 5b3513f580c8397212ff2c8f459c199efc0c90e4354a5f3533adf0a3fff3a530

      - name: fail check
        env:
          OUTCOME: ${{ steps.download-artifact.outcome }}
        run: |
          set -euo pipefail
          [ "${OUTCOME}" == "failure" ]

  # Tests that generate-builder works with compile-builder=true.
  generate-builder-generic-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - uses: ./.github/actions/generate-builder
        with:
          repository: "slsa-framework/slsa-github-generator"
          ref: "main"
          compile-builder: true
          go-version: 1.18
          binary: "slsa-generator-generic-linux-amd64"
          directory: "internal/builders/generic"

  # Tests that generate-builder works with compile-builder=false.
  generate-builder-generic-no-compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - name: Detect the builder ref
        id: detect
        uses: ./.github/actions/detect-workflow
      - uses: ./.github/actions/generate-builder
        with:
          repository: ${{ steps.detect.output.repository }}
          ref: ${{ steps.detect.outputs.ref }}
          builder-ref: "refs/tags/v1.2.2"
          go-version: 1.18
          binary: "slsa-generator-generic-linux-amd64"
          directory: "internal/builders/generic"
          # NOTE: compile-builder explicitly set to false.
          compile-builder: false

  generate-attestations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3.4.0
      - name: Test generate attestations
        id: generate
        uses: ./.github/actions/generate-attestations
        with:
          slsa-layout-file: .github/actions/generate-attestations/testdata/layouts/valid-layout.json
          predicate-type: "https://slsa.dev/provenance/v0.2"
          predicate-file: .github/actions/generate-attestations/testdata/predicates/valid-slsa-v02.json
          output-folder: attestations
      - name: Verify outputs
        env:
          OUTPUT_FOLDER: attestations
        run: |
          set -euo pipefail
          ls $OUTPUT_FOLDER
          artifact11=$(jq -r '.subject[0].name' $OUTPUT_FOLDER/attestation1.intoto)
          if [[ $artifact11 != "artifact11" ]]; then
            echo "expected artifact11 name"
            exit 2
          fi
          digest11=$(jq -r '.subject[0].digest["sha256"]' $OUTPUT_FOLDER/attestation1.intoto)
          if [[ $digest11 != "deadbeaf" ]]; then
            echo "expected deadbeaf digest"
            exit 2
          fi
          artifact21=$(jq -r '.subject[0].name' $OUTPUT_FOLDER/attestation2.intoto)
          if [[ $artifact21 != "artifact21" ]]; then
            echo "expected artifact21 name"
            exit 2
          fi
          digest21=$(jq -r '.subject[0].digest["sha256"]' $OUTPUT_FOLDER/attestation2.intoto)
          if [[ $digest21 != "deadbeat" ]]; then
            echo "expected deadbeat digest"
            exit 2
          fi
